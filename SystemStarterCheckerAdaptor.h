/*
 * This file was generated by qdbusxml2cpp version 0.8
 * Command line was:
 *
 * qdbusxml2cpp is Copyright (C) 2016 The Qt Company Ltd.
 *
 * This is an auto-generated file.
 * This file may have been hand-edited. Look for HAND-EDIT comments
 * before re-generating it.
 */

#ifndef NEXTUIADAPTOR_H
#define NEXTUIADAPTOR_H

#include <QtCore/QObject>
#include <QtDBus/QtDBus>
QT_BEGIN_NAMESPACE
class QByteArray;
template<class T> class QList;
template<class Key, class Value> class QMap;
class QString;
class QStringList;
class QVariant;
QT_END_NAMESPACE

/*
 * Adaptor class for interface nui.global
 */
class GlobalAdaptor: public QDBusAbstractAdaptor
{
    Q_OBJECT
    Q_CLASSINFO("D-Bus Interface", "nui.global")
    Q_CLASSINFO("D-Bus Introspection", ""
"  <interface name=\"nui.global\">\n"
"    <property access=\"readwrite\" type=\"s\" name=\"TheTheme\"/>\n"
"    <signal name=\"themeChanged\"/>\n"
"  </interface>\n"
        "")
public:
    GlobalAdaptor(QObject *parent);
    virtual ~GlobalAdaptor();

public: // PROPERTIES
    Q_PROPERTY(QString TheTheme READ theTheme WRITE setTheTheme)
    QString theTheme() const;
    void setTheTheme(const QString &value);

public Q_SLOTS: // METHODS
Q_SIGNALS: // SIGNALS
    void themeChanged();
};

#endif
